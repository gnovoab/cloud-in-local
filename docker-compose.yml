---
version: '3'
services:
    eureka-service:
        container_name: eureka-service
        image: "gnovoab/eureka-service:dev"
        ports: 
            - "8761:8761"    
             
            
    config-server:
        container_name: config-server
        image: "gnovoab/config-server:dev"
        ports: 
            - "8888:8888"  
        depends_on:
            - eureka-service


    admin-service:
        container_name: admin-service
        image: "gnovoab/admin-service:dev"
        ports: 
            - "7500:7500"
        environment:
            - "SPRING_PROFILES_ACTIVE=docker"
            - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
        depends_on:
            - eureka-service
            - config-server
            
            
    api-gateway:
        container_name: api-gateway
        image: "gnovoab/api-gateway:dev"
        ports: 
            - "7100:7100"
        environment:
            - "SPRING_PROFILES_ACTIVE=docker"
            - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
        depends_on:
            - eureka-service
            - config-server
            - admin-service

    authorization-service:
        container_name: authorization-service
        image: "gnovoab/authorization-service:dev"
        ports:
            - "9999:9999"

        environment:
            - "SPRING_PROFILES_ACTIVE=docker"
            - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
            - "SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/auth"
        depends_on:
            - PostgreSQL
            - eureka-service
            - config-server
            - admin-service


    PostgreSQL:
        container_name: postgres
        image: postgres
        volumes:
            - db-data:/var/lib/postgresql/data
        ports:
            - 5432:5432
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres

    DynamoDB:
        container_name: dynamo
        image: amazon/dynamodb-local
        ports:
            - "8000:8000"
        volumes:
            - dynamodata:/home/dynamodblocal
        working_dir: /home/dynamodblocal
        command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ."


volumes:
    db-data:
        driver: local
    dynamodata:
        driver: local







